"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-9oa0#g1nax6qt&d*r3y1jg35jw4ciiq%#34lsn05fmm4#u9jaa"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# CREATE DATABASE airgoworld_database;
# CREATE USER airgoworld_user WITH PASSWORD 'LEGITphones007*';
# ALTER ROLE airgoworld_user SET client_encoding TO 'utf8';
# ALTER ROLE airgoworld_user SET default_transaction_isolation TO 'read committed';
# ALTER ROLE airgoworld_user SET timezone TO 'UTC';
# GRANT ALL PRIVILEGES ON DATABASE airgoworld_database TO airgoworld_user;
        # 'HOST': '2a02:4780:2d:beef::1',  # Use the IP address if PostgreSQL is hosted elsewhere


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'airgoworld_database',  # Replace with your database name
        'USER': 'airgoworld_user',  # Replace with your username
        'PASSWORD': 'LEGITphones007*',  # Replace with your password
        'HOST': 'localhost',  # Use the IP address if PostgreSQL is hosted elsewhere
        'PORT': '5432',  # Default port for PostgreSQL
    }
}


ALLOWED_HOSTS = [
    "46.202.178.135",
    "localhost",
    "http://46.202.178.135:8000"
    "airgoworld.net",
]
AUTH_USER_MODEL = "user.CustomUser"

REST_FRAMEWORK = {
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ]
}


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    "blog",
    "user",
    "airline",
    "airport",
    "tours",
    "hotel",
    "rooms",
    "car",
    "paymentmethod",
    "otp",
    "flight",
    "flight_booking",
    "hotel_booking",
    "bank_infos",
    "corsheaders",
    "cabin",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

RESEND_API_KEY = "re_fvtLfusD_8ymJRqFcrnfjNdTsPGtMvqzA"
RESEND_FROM_EMAIL = "Acme <onboarding@resend.dev>"

ROOT_URLCONF = "core.urls"
CORS_ALLOW_CREDENTIALS = True
SESSION_COOKIE_SAMESITE = None
SESSION_COOKIE_SECURE = True

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': dj_database_url.config(
#         default=os.getenv('DATABASE_URL', 'sqlite:///db.sqlite3')
#     )
# }

# DATABASES = {
#     "default": dj_database_url.config(default=os.environ.get("DATABASE_URL"))
# }

# DATABASES = {
#     'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'airgoworld',  # Your database name
#         'USER': 'airgoworld',  # Your PostgreSQL user
#         'PASSWORD': 'EuropaLeague',  # Your PostgreSQL password
#         'HOST': 'localhost',
#         'PORT': '5432',  # Default PostgreSQL port
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "database",  # Replace with your DB name
        "USER": "arigoworld2",  # Replace with your DB user
        "PASSWORD": "LEGITphones007*",  # Replace with your DB password
        "HOST": "localhost",
        "PORT": "5432",
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),  # Or just 'db.sqlite3'
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',  # Replace with your actual database name
#         'USER': 'postgres',  # Replace with your actual username
#         'PASSWORD': 'West8015',  # Replace with your actual password
#         'HOST': 'localhost',
#         'PORT': '5432',
#         'OPTIONS': {
#             'connect_timeout': 10,
#             'sslmode': 'prefer',  # You can adjust this if needed
#         }
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
CORS_ALLOW_ALL_ORIGINS = True


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.AllowAny",  # Ensure this is included
    ),
}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=360),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}
